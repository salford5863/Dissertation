
_sy()
{
	local cur prev firstword lastword complete_words complete_options

	# Don't break words at : and =, see [1] and [2]
	COMP_WORDBREAKS=${COMP_WORDBREAKS//[:=]}

	cur=${COMP_WORDS[COMP_CWORD]}
	prev=${COMP_WORDS[COMP_CWORD-1]}
	firstword=$(_sy_get_firstword)
	lastword=$(_sy_get_lastword)

	GLOBAL_COMMANDS="\
		new\
		ssh\
		update\
		disk\
		sysinfo\
        list\
        shutdown\
        start\
		restart\
        delete\
		exit"


	GLOBAL_OPTIONS="-h"

    NEWVM_OPTIONS="\
            -c --cpu\
            -m --memory\
            -d --disk\
			-v --volume\
			-n --number"

    UPDATEVM_OPTIONS="\
            -c --cpu\
            -m --memory\
            -d --disk\
			-v --volume\
			-n --name"

	VM_OPTIONS="\
	      -a   --all\		
          -n   --name"
    DELVM_OPTIONS="\
	      -a   --all\		
          -n   --name\
		  -f  --force\
		  -af  --allforce"

	SYSINFO_OPTIONS="\
	      -n   --name"
 
    DISKDEL="\
		-d --disk"

	DISKATTACH_OPTIONS="\
	      -n   --name\
		  -d --disk\
		  -v --volume"

	DISKINFO_OPTIONS="\
	      -d   --disk\
		  -a   --all\
		  -f   --find\
		  -l   --list"

	DISKALL_OPTIONS="\
		attach\
		deattach\
		del\
		info"

	LIST_OPTIONS="\
		-a  --all\
		-r  --running"

		
	ATTACH_OPTIONS="\
	      -n   --name\
		  -d --disk\
		  -v  --volume"
	
	if [ -d ~/.Vmdisk ]
	then
		DISK_LIST=$(ls ~/.Vmdisk)
		else
		mkdir ~/.Vmdisk
	fi
	
	
	function systemlist()
	{
		
		SYSTEM_LIST=$(vagrant status|grep mydb|cut -d' ' -f1) 
	}	

	case "${firstword}" in
		disk)
			case "${prev}" in
				attach)
					complete_options="$ATTACH_OPTIONS"
				;;
				-d|--disk)
					complete_options="$DISK_LIST"
				;;
				-n|--name)
					systemlist
					complete_options="$SYSTEM_LIST"
				;;
				deattach)
					complete_options="$SYSINFO_OPTIONS"
				;;
				-n|--name)
					complete_options="$SYSTEM_LIST"
				;;
				del)
					complete_options="$DISKDEL"
				;;
				info)
					complete_options="$DISKINFO_OPTIONS"
				;;
				-d|--disk)
					complete_options="$DISK_LIST"
				;;
				*) 
					complete_options="$DISKALL_OPTIONS"	
					
    		esac
			 ;;
		
		new)
			case ${prev} in
				-d|--disk)
					complete_options="$DISK_LIST"
				;;
				*)
					complete_options="$NEWVM_OPTIONS"
				;;
				esac
				;;	

		start)
			case ${prev} in
				-n|--name)
				    systemlist
					complete_options="$SYSTEM_LIST"
				;;
				*)
					complete_options="$VM_OPTIONS"
				;;
			esac
			;;
		
		restart)
			case ${prev} in
				-n|--name)
				    systemlist
					complete_options="$SYSTEM_LIST"
				;;
				*)
					complete_options="$VM_OPTIONS"
				;;
			esac
			;;

		shutdown)
			case ${prev} in
				-n|--name)
				    systemlist
					complete_options="$SYSTEM_LIST"
				;;
				*)
					complete_options="$VM_OPTIONS"
				;;
			esac
			;;	

		update)
			case "${prev}" in
				-d|--disk)
					complete_options="$DISK_LIST"
				;;
				-n|--name)
					systemlist
					complete_options="$SYSTEM_LIST"
				;;
				*) 
					complete_options="$UPDATEVM_OPTIONS"
				;;				
    		esac
			;;

		delete)
			case ${prev} in
				-n|--name)
				    systemlist
					complete_options="$SYSTEM_LIST"
				;;
				-f|--force)
					systemlist
					complete_options="$SYSTEM_LIST"
				;;	

				*)
					complete_options="$DELVM_OPTIONS"
				;;
			esac
			;;	
		ssh)
		    systemlist
			complete_options="$SYSTEM_LIST"
		;;
		list)
			complete_options="$LIST_OPTIONS"
		;;

		sysinfo)
			complete_options="$SYSINFO_OPTIONS"
		;;
	*)
		complete_options="$GLOBAL_COMMANDS"
	 esac
	
	# Either display words or options, depending on the user input
	if [[ $cur == * ]]; then
		COMPREPLY=( $( compgen -W "$complete_options" -- $cur ))
		
	else
		COMPREPLY=( $( compgen -W "$complete_words" -- $cur ))
	fi
	
    return 0
}



# Determines the first non-option word of the command line. This
# is usually the command
_sy_get_firstword() {
	local firstword i

	firstword=
	for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
		if [[ ${COMP_WORDS[i]} != -* ]]; then
			firstword=${COMP_WORDS[i]}
			break
		fi
	done

	echo $firstword
}

# Determines the last non-option word of the command line. This
# is usally a sub-command
_sy_get_lastword() {
	local lastword i

	lastword=
	for ((i = 1; i < ${#COMP_WORDS[@]}; ++i)); do
		if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[ ${COMP_WORDS[i]} != $cur ]] ; then
			lastword=${COMP_WORDS[i]}
		fi
	done

	echo $lastword
}

complete -F _sy sy
complete -F _sy vmcreate

